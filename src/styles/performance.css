/* Performance-focused styles for scroll optimization */

/* Basic scroll optimization - pause all animations and transitions */
.optimize-scroll * {
  animation-play-state: paused !important;
  transition: none !important;
  will-change: auto !important; /* Reset will-change to auto to avoid memory consumption */
}

/* Heavy scroll optimization - more aggressive for smoother scrolling */
.optimize-scroll-heavy * {
  filter: none !important; /* Remove all filters */
  opacity: 1 !important; /* Force full opacity */
  transform: none !important; /* Remove all transforms */
  box-shadow: none !important; /* Remove all shadows */
}

/* Smoothly re-enable animations after scrolling stops */
.animation-reset * {
  animation-play-state: running;
  transition: all 0.2s ease-out;
}

/* Optimize GPU-heavy elements like Canvas during scrolling */
.optimize-when-scrolling {
  will-change: transform;
  contain: content; /* Use CSS containment for better performance */
  transform: translateZ(0); /* Force GPU acceleration */
}

/* Target canvas elements specifically for better scrolling */
.optimize-scroll .optimize-when-scrolling canvas {
  opacity: 0.75; /* Reduce visual quality during scroll */
  image-rendering: optimizeSpeed !important; /* Prioritize performance over quality */
  filter: none !important; /* Remove any expensive filters */
  transform: scale(0.95); /* Slightly downscale for better performance */
}

/* More aggressive optimization for heavy scrolling */
.optimize-scroll-heavy .optimize-when-scrolling canvas {
  opacity: 0.6 !important; /* Further reduce quality */
  image-rendering: optimizeSpeed !important;
  filter: blur(1px) !important; /* Slight blur to hide rendering artifacts */
  transform: scale(0.9) !important; /* Further downscale */
}

/* Reduce canvas resolution during scroll on larger screens */
@media (min-width: 768px) {
  .optimize-scroll .optimize-when-scrolling {
    transform: scale(0.95); /* Slightly scale down to improve performance */
    transition: transform 0.2s ease-out;
  }
  
  .optimize-scroll-heavy .optimize-when-scrolling {
    transform: scale(0.9); /* Even more aggressive scale down */
    transition: transform 0.15s ease-out;
  }
}

/* Optimize backdrop-filter which is very expensive */
.optimize-scroll [style*="backdrop-filter"],
.optimize-scroll .backdrop-blur-xl,
.optimize-scroll [class*="backdrop-blur"] {
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
  background: rgba(255, 255, 255, 0.9) !important;
}

/* Optimize box-shadows which can be expensive to render */
.optimize-scroll [class*="shadow"] {
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1) !important;
}

/* Disable expensive hover transforms during scroll */
.optimize-scroll [class*="hover:scale"],
.optimize-scroll [class*="hover:rotate"] {
  transform: none !important;
}

/* Optimize gradient backgrounds during scroll */
.optimize-scroll [style*="linear-gradient"],
.optimize-scroll [style*="radial-gradient"] {
  background: rgba(156, 163, 175, 0.1) !important;
}

/* Optimize blur effects */
.optimize-scroll [class*="blur"] {
  filter: none !important;
}

/* Add containment to components for better performance */
.performance-contain {
  contain: content;
}

/* Reduce layout calculations for fixed-size elements */
.layout-contain {
  contain: layout;
}

/* Reduce layout thrashing by setting explicit sizes where possible */
.optimize-scroll .explicit-size {
  width: var(--cached-width, 100%);
  height: var(--cached-height, auto);
}

/* Low power mode optimizations */
.low-power-mode {
  --animation-duration: 0; /* Disable animations */
}

.low-power-mode * {
  animation-duration: 0s !important; /* Disable all animations */
  transition-duration: 0s !important; /* Disable all transitions */
}

.low-power-mode .optimize-when-scrolling canvas {
  opacity: 0.6 !important; /* Lower quality */
  image-rendering: optimizeSpeed !important;
  transform: scale(0.85) !important; /* More aggressive scaling */
}

/* Mobile device optimizations */
.mobile-device .optimize-when-scrolling canvas {
  image-rendering: optimizeSpeed !important;
}

/* Slow device optimizations */
.slow-device * {
  animation-duration: 200% !important; /* Slow down animations */
  transition-duration: 200% !important; /* Slow down transitions */
}

.slow-device .optimize-when-scrolling canvas {
  opacity: 0.7 !important;
  image-rendering: optimizeSpeed !important;
  transform: scale(0.9) !important;
}

/* CSS-based fade in animation to replace Framer Motion */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in-up {
  animation: fadeInUp 0.8s ease-out forwards;
}

/* Hero section animations */
@keyframes heroFadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes heroItem {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-hero-fade-in {
  animation: heroFadeIn 0.5s ease-out forwards;
}

.animate-hero-item {
  animation: heroItem 0.4s ease-out forwards;
}

/* Optimize Framer Motion animations during scroll */
.optimize-scroll [data-framer-component] {
  animation-play-state: paused !important;
}

.optimize-scroll motion-section,
.optimize-scroll motion-div {
  animation-play-state: paused !important;
}
